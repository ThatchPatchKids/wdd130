/*This is called a ruleset?*/
body {   /* body is the selector. Within the curly braces are the declarations or property-value pairs that will apply to the element (body).*/
    background-color: seagreen;   /* background-color is the property name, seagreen is the value.*/
}

h1 {
    color:blue;
    font-size: 30px;
    text-align:center;
    margin-bottom: 35px;
}
a {
    text-decoration: none;
    border: 2px solid black;
    padding: 5px;
}

/*-------------------------------*/
/*          Precedence           */
/*-------------------------------*/
/*inline CSS overrides embedded and embedded CSS overrides external*/
/*-------------------------------*/
/*          Inheritance          */
/*-------------------------------*/
/*The children elements will inherit some of the declarations from the parent element.*/


/*-------------------------------*/
/*             Fonts             */
/*-------------------------------*/
/*Web-safe fonts: Can be used on any browser and dont need to be installed on a users computer or imported.*/
/*Importing or downloading fonts. You can do that from websites like, Font Squirrel or Google Fonts.*/

/*This should be at the top of the CSS file, before any of other styles.*/
/*Use this to import the link to a font you're using*/
@import url('Name of the link/path to the font.');

/*Use this to import a font from a file. This should also be at the top of a CSS file before any styles.*/
@font-face {
    font-family: "Rock Salt";
    src: url(fonts/RockSalt-Regular.ttf);
}
/*
body {
    font-family: 1st choice, 2nd choice, 3rd choice;
}    
*/
/*-------------------------------*/
/*             Color             */
/*-------------------------------*/
/*3 ways colors are recognized in CSS.

1. Names 
    e.g. blue, black, white, green, etc.
2. Hex Codes
    This represent the amount of Red, Green, and Blue in a color.
    first two digits are the amount of red, second two digits are the amount of green, third two digits are the amount of blue.
    # FF = The highest value, 00 is the lowest. (Hex is 0-9 a-f or just 0-f).
    e.g. #000000 (black), #FFFFFF (white), #FF0000 (red), #00FF00 (green), #0000FF (blue)
3. RGB values
    rgb(0-255,0-255,0-255)
    rgb(0,0,0) = Black, rgb(255,255,255) = white, rgb(255,0,0) = red, rgb(0,255,0) = green, rgb(0,0,255) = Blue
    You can add an alpha value which lets you specify the opacity of the element 
    rgba(0-255,0-255,0-255,0.0-1.0)
    e.g. rgba(0,255,0,0.2) 0.0 = totally see through, 1.0 = totally opaque or solid. 

Watch out for a high enough contrast between foreground and background colors.
*/

/*-------------------------------*/
/*   Classes and ID Attributes   */
/*-------------------------------*/

/*Put a dot in front of the class name, this will only apply to the class named "shaded"*/

.shaded {
    background-color: #ccc;
}

/*This looks for the id named "myheader"*/
#myheader {
    font-family: 'Lemon', 'sans-serif';
    font-size: 45px;
    color: aqua;
}

/*Adding multiple classes to the same HTML element?*/


/*-------------------------------*/
/*     Units of Measurement      */
/*-------------------------------*/

/*width:, margin:, font-size:
px, dm, % 
Absolute units, always the same size, regardless of the page size.
    e.g. px (pixel size)
Relative units, their size can change based on the page or font-size or device/screen size. These scale better across devices.
    e.g. em or %

rem vs em?
1em = 100% of the default font size
1.5em = 150%, 
vw (viewport width)?
vh (viewport height)?
min-width and max-width for limiting size when zooming in or out.
*/

/*-------------------------------*/
/*   Block and Inline Elements   */
/*-------------------------------*/

/*Block elements do not allow other elements to share the line they are on.

Inline elements will allow other elements to share a line as long as their is room.

The display: inline declaration can turn a block element into an inline element.
The display: block declaration can turn an inline element into a block element.

The display: inline-block declaration can turn a block element into an inline element while maintaining 
some of the characteristics of a block element.
*/

/*-------------------------------*/
/*           Centering           */
/*-------------------------------*/

/*text-align: center vs margin: 0 auto
    text-align: center will center the contents within a box.

    margin: 0 auto will center the box itself.*/

/*-------------------------------*/
/*  CSS Selectors & Specificity  */
/*-------------------------------*/

/*Element name selectors, ID and Class selectors

Specificity
    Ranked from most specific to least:
    Most specific overwrite less specific.
    Most:  ID selectors
           Class selectors
           pseudo-class selectors
    Least: element name selectors
*/

/*All the h1 and h4 elements will have the same declarations.*/
h1, h4 {
    font-family: 'Lemon', 'sans-serif';
}

/*You can get more specific with descendent CSS selectors.
For example:*/
article p {
    line-height: 1.5em;
}
/*Here we target all of the <p> elements within the article element.

Another example:*/

#product_gallery img {
    width: 50%;
}
/*Here we target all of the images within our product gallery.

more examples:*/

main img {
    width: 40%;
}
/*Here we target all of the images within the main element.*/

#img_container img {
    width: 40%;
}
/*Here we target all of the images within the img_container ID.*/

/*More selectors:*/

li:nth-of-type(2) {
    background-color: #ccc;
}
/*Here we select the second li element, assuming we have more than one.*/

nav a:hover {
    color: black;
    background-color: #ccc;
}
button:hover {
    background-color: beige;
}
/*Now when you hover over these elements on the page the element will change with the new declarations.*/